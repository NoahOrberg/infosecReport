
==================== FINAL INTERFACE ====================
2016-11-01 08:38:45.652817 UTC

interface rsa-report-0.1.0.0-5iswHUjlzUzCMH0rDQAKao:Sec 8001
  interface hash: df2d32362317f6308747d1f9a4abcd96
  ABI hash: ecc1e863e3517e961657cef9d543f862
  export-list hash: 62ea23cfc3fe6d5370b303e45cd545de
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: a4046e0fdab24403354cf30558c1ea1c
  sig of: Nothing
  used TH splices: False
  where
exports:
  Sec.createPrimeList
  Sec.createPrimeList2
  Sec.euclidEx
  Sec.isPrime
module dependencies:
package dependencies: base-4.9.0.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Either base-4.9.0.0:Data.Functor.Const
                         base-4.9.0.0:Data.Monoid base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:GHC.Generics base-4.9.0.0:GHC.IO.Exception
                         base-4.9.0.0:GHC.TypeLits
import  -/  base-4.9.0.0:Data.Foldable 8aeb682f6c74f97fcf0ace0d608a43ea
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:GHC.Float 469226b1bc53433e95d0167dec5d0312
import  -/  base-4.9.0.0:GHC.Num 48f506a8f4ecf06285d0a0706594dcc0
import  -/  base-4.9.0.0:GHC.Real 08bf4acb5f2508f89d6fbcd57fe232e9
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  integer-gmp-1.0.0.1:GHC.Integer.Type 62c0e736506aac47ef40569f5b82e19d
be1af75d3aea28f44cde71361088a337
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Sec.$trModule2 Sec.$trModule1) -}
522e6279aacd6170d748931e8fbaeb32
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Sec"#) -}
6092482a56fa6890f802671a84a6549f
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "rsa-report-0.1.0.0-5iswHUjlzUzCMH0rDQAKao"#) -}
5d76861c9d26588b1f390109aa27bd04
  $wcreatePrimeList ::
    GHC.Prim.Int# -> GHC.Prim.Int# -> [GHC.Types.Int]
  {- Arity: 2, Strictness: <S,U><S,U>, Inline: [0] -}
8ef432f76b6bd8ab1edcb296ee6db696
  $wf ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
  {- Arity: 4, Strictness: <L,U><S,U><L,1*U><L,U>, Inline: [0] -}
a1aac46667f0a95555bc2f63425ace7e
  $wjudgePrimeNum :: GHC.Types.Int -> GHC.Prim.Int# -> GHC.Types.Bool
  {- Arity: 2, Strictness: <L,1*U(U)><S,1*U>, Inline: [0] -}
793c17b20c9516b3858cc6635d2cf5cf
  createPrimeList ::
    GHC.Types.Int -> GHC.Types.Int -> [GHC.Types.Int]
  {- Arity: 2, Strictness: <S(S),1*U(U)><S(S),1*U(U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: GHC.Types.Int) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { GHC.Types.I# ww3 ->
                 Sec.$wcreatePrimeList ww1 ww3 } }) -}
ea2f9608a0d5f6db7404f23fe6f55ba7
  createPrimeList2 :: [GHC.Types.Int]
  {- Unfolding: (Sec.createPrimeList2_go 2#) -}
b0a5d34b820107e691fd983c70e64eb0
  createPrimeList2_go :: GHC.Prim.Int# -> [GHC.Types.Int]
  {- Arity: 1, Strictness: <S,U> -}
1a027c29fa6b10d5e0dfc5ab085740d4
  euclidEx ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: GHC.Integer.Type.Integer)
                   (y :: GHC.Integer.Type.Integer) ->
                 Sec.euclidEx_f
                   x
                   y
                   Sec.euclidEx2
                   Sec.euclidEx1
                   Sec.euclidEx1
                   Sec.euclidEx2) -}
e33e492e92d93f2dcdecfd89c6dabf72
  euclidEx1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (0) -}
3c5b17d84f099401c43c39c268c0df51
  euclidEx2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
94733309e22deb35a96370e5498403f4
  euclidEx_f ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
  {- Arity: 6, Strictness: <L,U><S,U><L,1*U><L,U><L,A><L,A>,
     Inline: INLINE[0],
     Unfolding: InlineRule (6, True, True)
                (\ (w :: GHC.Integer.Type.Integer)
                   (w1 :: GHC.Integer.Type.Integer)
                   (w2 :: GHC.Integer.Type.Integer)
                   (w3 :: GHC.Integer.Type.Integer)
                   (w4 :: GHC.Integer.Type.Integer)
                   (w5 :: GHC.Integer.Type.Integer) ->
                 Sec.$wf w w1 w2 w3) -}
eb172e9560e0d0f29757e4143e954e40
  isPrime :: GHC.Types.Int -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S(S),U(U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (n :: GHC.Types.Int) ->
                 case n of wild { GHC.Types.I# x ->
                 Sec.isPrime_judgePrimeNum
                   wild
                   (GHC.Types.I# (GHC.Prim.-# x 1#)) }) -}
3d237442b8c4c9315627906db69dd8da
  isPrime_judgePrimeNum ::
    GHC.Types.Int -> GHC.Types.Int -> GHC.Types.Bool
  {- Arity: 2, Strictness: <L,1*U(U)><S(S),1*U(1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: GHC.Types.Int) ->
                 case w1 of ww { GHC.Types.I# ww1 -> Sec.$wjudgePrimeNum w ww1 }) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

