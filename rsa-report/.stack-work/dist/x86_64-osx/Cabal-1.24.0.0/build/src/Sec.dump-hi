
==================== FINAL INTERFACE ====================
2016-11-12 14:11:14.409661 UTC

interface rsa-report-0.1.0.0-5iswHUjlzUzCMH0rDQAKao:Sec 8001
  interface hash: 1e905d371915016d8ff2c73f7930d028
  ABI hash: 2613625a830242f60fe4625bdebc122c
  export-list hash: 9007c26073e3730d56f927372bfaa285
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: a4046e0fdab24403354cf30558c1ea1c
  sig of: Nothing
  used TH splices: False
  where
exports:
  Sec.createPrimeList
  Sec.createPrimeList2
  Sec.getD
  Sec.getE
  Sec.isPrime
module dependencies:
package dependencies: base-4.9.0.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Either base-4.9.0.0:Data.Functor.Const
                         base-4.9.0.0:Data.Monoid base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:GHC.Generics base-4.9.0.0:GHC.IO.Exception
                         base-4.9.0.0:GHC.TypeLits
import  -/  base-4.9.0.0:Data.Foldable 8aeb682f6c74f97fcf0ace0d608a43ea
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:GHC.Float 469226b1bc53433e95d0167dec5d0312
import  -/  base-4.9.0.0:GHC.Num 48f506a8f4ecf06285d0a0706594dcc0
import  -/  base-4.9.0.0:GHC.Real 08bf4acb5f2508f89d6fbcd57fe232e9
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  integer-gmp-1.0.0.1:GHC.Integer.Type 62c0e736506aac47ef40569f5b82e19d
be1af75d3aea28f44cde71361088a337
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Sec.$trModule2 Sec.$trModule1) -}
522e6279aacd6170d748931e8fbaeb32
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Sec"#) -}
6092482a56fa6890f802671a84a6549f
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "rsa-report-0.1.0.0-5iswHUjlzUzCMH0rDQAKao"#) -}
8ef432f76b6bd8ab1edcb296ee6db696
  $wf ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
  {- Arity: 4, Strictness: <L,U><S,U><L,1*U><L,U>, Inline: [0] -}
fda167e1cb0d8d6a352043d186addb97
  $wgo ::
    GHC.Integer.Type.Integer
    -> (# GHC.Integer.Type.Integer, [GHC.Integer.Type.Integer] #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0] -}
1031d60212c92e45e3985cedb952bf63
  createPrimeList ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer -> [GHC.Integer.Type.Integer]
  {- Arity: 2, Strictness: <S,U><S,U> -}
1c08cc6f64b10104964947b78ce3b47b
  createPrimeList1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (2) -}
638ee5b5eccf591741a8328994e0881f
  createPrimeList2 :: [GHC.Integer.Type.Integer]
  {- Unfolding: (case Sec.$wgo
                        Sec.createPrimeList1 of ww { (#,#) ww1 ww2 ->
                 GHC.Types.: @ GHC.Integer.Type.Integer ww1 ww2 }) -}
595cf5bade145bd7653f918f35c746a9
  getD ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (e :: GHC.Integer.Type.Integer)
                   (w :: GHC.Integer.Type.Integer) ->
                 Sec.getD_f e w Sec.getD2 Sec.getD1 Sec.getD1 Sec.getD2) -}
f3aa9c645eea1cf6cbafd732e4c0f1d9
  getD1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (0) -}
5e6beca258548512f8983bd34fdd8a74
  getD2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
dce71967c5912abd51e5de3d5c0ad332
  getD_f ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
  {- Arity: 6, Strictness: <L,U><S,U><L,1*U><L,U><L,A><L,A>,
     Inline: INLINE[0],
     Unfolding: InlineRule (6, True, True)
                (\ (w :: GHC.Integer.Type.Integer)
                   (w1 :: GHC.Integer.Type.Integer)
                   (w2 :: GHC.Integer.Type.Integer)
                   (w3 :: GHC.Integer.Type.Integer)
                   (w4 :: GHC.Integer.Type.Integer)
                   (w5 :: GHC.Integer.Type.Integer) ->
                 Sec.$wf w w1 w2 w3) -}
4e9e59e78fd56ad0402c07e40b663648
  getE :: GHC.Integer.Type.Integer -> [GHC.Integer.Type.Integer]
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Integer.Type.Integer) ->
                 letrec {
                   go :: GHC.Integer.Type.Integer -> [GHC.Integer.Type.Integer]
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (x :: GHC.Integer.Type.Integer) ->
                     case GHC.Integer.Type.gtInteger# x w of wild { DEFAULT ->
                     case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild of wild1 {
                       GHC.Types.False
                       -> case GHC.Integer.Type.gtInteger#
                                 x
                                 Sec.getD1 of wild2 { DEFAULT ->
                          case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild2 of wild3 {
                            GHC.Types.False
                            -> go (GHC.Integer.Type.plusInteger x GHC.Enum.$fEnumInteger1)
                            GHC.Types.True
                            -> case GHC.Integer.Type.eqInteger#
                                      (GHC.Integer.Type.gcdInteger w x)
                                      Sec.getD2 of wild4 { DEFAULT ->
                               case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild4 of wild5 {
                                 GHC.Types.False
                                 -> go (GHC.Integer.Type.plusInteger x GHC.Enum.$fEnumInteger1)
                                 GHC.Types.True
                                 -> GHC.Types.:
                                      @ GHC.Integer.Type.Integer
                                      x
                                      (go
                                         (GHC.Integer.Type.plusInteger
                                            x
                                            GHC.Enum.$fEnumInteger1)) } } } }
                       GHC.Types.True -> GHC.Types.[] @ GHC.Integer.Type.Integer } }
                 } in
                 go Sec.createPrimeList1) -}
dccf6b4f8c767109404baacffc65e43b
  isPrime :: GHC.Integer.Type.Integer -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (n :: GHC.Integer.Type.Integer) ->
                 Sec.isPrime_judgePrimeNum
                   n
                   (GHC.Integer.Type.minusInteger n Sec.getD2)) -}
eab332046362196b60ec47e48733815d
  isPrime_judgePrimeNum ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer -> GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><S,U> -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

